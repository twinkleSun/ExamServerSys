<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.examsys.dao.StudentPointDetailMapper">

  <resultMap id="BaseResultMap" type="com.examsys.model.StudentPointDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="paper_code" property="paperCode" jdbcType="VARCHAR" />
    <result column="exam_id" property="examId" jdbcType="INTEGER" />
    <result column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="def_point" property="defPoint" jdbcType="DOUBLE" />
    <result column="student_answer" property="studentAnswer" jdbcType="VARCHAR" />
    <result column="student_point" property="studentPoint" jdbcType="DOUBLE" />
    <result column="question_status" property="questionStatus" jdbcType="INTEGER" />
    <result column="stamp" property="stamp" jdbcType="INTEGER" />
  </resultMap>


  <resultMap id="studentAnsEntity" type="com.examsys.model.entity.StudentAnswersDetail">
    <id column="exam_id" property="exam_id" jdbcType="INTEGER" />
    <result column="paper_code" property="paper_code" jdbcType="VARCHAR" />
    <collection property="student_answers_detail" javaType="java.util.List" ofType="Map">
      <id column="student_id" property="student_id" jdbcType="INTEGER" />
      <result column="student_name" property="student_name" jdbcType="VARCHAR" />
      <collection property="paper_status" javaType="java.util.HashMap" ofType="Map">
        <result column="objective_grade" property="objective_grade"></result>
        <result column="subjective_status" property="subjective_status"></result>
        <collection property="subjective_answers" ofType="Map" javaType="java.util.List">
          <id column="id" property="id"></id>
          <result column="content" property="content"></result>
          <result column="description" property="description"></result>
          <result column="total_point" property="total_point"></result>
          <result column="answer" property="answer"></result>
          <result column="student_answer" property="student_answer"></result>
          <result column="tech_point" property="tech_point"></result>
          <result column="question_status" property="question_status"></result>
        </collection>
      </collection>
    </collection>
  </resultMap>

  <select id="selectStudentAnswers" resultMap="studentAnsEntity" parameterType="java.lang.Integer">
        SELECT sp.exam_id exam_id, sp.paper_code paper_code,sp.student_id student_id,
               sp.objective_grade,sp.subjective_status subjective_status,
               u.name student_name,
               sd.question_id id,sd.def_point total_point,sd.student_answer student_answer,
               sd.student_point tech_point,sd.question_status question_status,
               ql.content content, ql.description description,ql.answer answer
        FROM student_point sp
        left join `user` u on sp.student_id=u.id
        left join student_point_detail sd on sd.exam_id = sp.exam_id and sd.student_id = u.id
        LEFT JOIN  question_library ql on ql.id=sd.question_id
        where sp.exam_id=#{examId} and ql.type = "subjective"
    </select>



  <resultMap id="stuObjEntity" type="com.examsys.model.entity.StuObjJudgeEntity">
    <id column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="exam_id" property="examId" jdbcType="INTEGER" />
    <result column="sp_id" property="spId" jdbcType="INTEGER" />
    <result column="paper_code" property="paperCode" jdbcType="VARCHAR" />
    <result column="objective_grade" property="objectiveGrade" jdbcType="DOUBLE" />
    <result column="subjective_grade" property="subjectiveGrade" jdbcType="DOUBLE" />
    <result column="objective_status" property="objectiveStatus" jdbcType="INTEGER" />
    <result column="extra_point" property="extraPoint" jdbcType="DOUBLE" />
    <result column="student_total_point" property="studentTotalPoint" jdbcType="DOUBLE" />
    <collection property="stuQues" ofType="com.examsys.model.entity.StuObjQuesEntity">
      <id column="sd_id" property="sdId" />
      <result column="question_id" property="questionId" jdbcType="INTEGER" />
      <result column="def_point" property="defPoint" jdbcType="DOUBLE" />
      <result column="student_answer" property="studentAnswer" jdbcType="VARCHAR" />
      <result column="student_point" property="studentPoint" jdbcType="DOUBLE" />
      <result column="question_status" property="questionStatus" jdbcType="INTEGER" />
      <result column="def_ans" property="defAns" jdbcType="VARCHAR" />
      <result column="ques_type" property="quesType" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

  <select id="selectStuObjQues" resultMap="stuObjEntity" parameterType="java.lang.Integer">
        SELECT sp.student_id stu_id,sp.exam_id exam_id, sp.id sp_id,sp.paper_code paper_code,
               sp.objective_grade,sp.subjective_grade subjective_grade,sp.objective_status,
               sp.extra_point,sp.student_total_point,
               sd.id sd_id,sd.question_id question_id,sd.def_point def_point,sd.student_answer student_answer,
               sd.student_point student_point,sd.question_status question_status,
               ql.type ques_type,ql.answer def_ans
        FROM student_point sp
        left join student_point_detail sd on sd.student_id = sp.student_id
        LEFT JOIN  question_library ql on ql.id=sd.question_id
        where sp.exam_id=#{examId} and ql.type != "subjective"
    </select>





  <update id="updateByPK" parameterType="com.examsys.model.StudentPointDetail">
    update student_point_detail
    set student_point = #{studentPoint,jdbcType=DOUBLE},
      question_status = #{questionStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateStuAnswer" parameterType="com.examsys.model.StudentPointDetail">
    update student_point_detail
    set  student_answer = #{studentAnswer,jdbcType=VARCHAR},
    stamp = #{stamp}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectAll" resultMap="BaseResultMap" >
    select id, paper_code, question_id, student_id, def_point, student_answer, student_point,
    question_status,exam_id
    from student_point_detail
  </select>




  <update id="updateByIds" parameterType="com.examsys.model.StudentPointDetail" >
    update student_point_detail
    set student_point = #{studentPoint,jdbcType=DOUBLE},
      question_status = #{questionStatus,jdbcType=INTEGER}
    where exam_id = #{examId,jdbcType=INTEGER} and student_id =#{studentId} and question_id = #{questionId}
  </update>


  <select id="selectByIds" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, paper_code, question_id, student_id, def_point, student_answer, student_point,
    question_status,exam_id
    from student_point_detail
    where student_id = #{studentId} and exam_id = #{examId} and question_id = #{questionId}
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.examsys.model.StudentPointDetail" >
    insert into student_point_detail (id, paper_code, question_id,
      student_id, def_point, student_answer,
      student_point, question_status,exam_id,stamp)
    values (#{id,jdbcType=INTEGER}, #{paperCode,jdbcType=VARCHAR}, #{questionId,jdbcType=INTEGER},
      #{studentId,jdbcType=INTEGER}, #{defPoint,jdbcType=DOUBLE}, #{studentAnswer,jdbcType=VARCHAR},
      #{studentPoint,jdbcType=DOUBLE}, #{questionStatus,jdbcType=INTEGER},#{examId},#{stamp})
  </insert>



  <delete id="deleteByStuId" parameterType="java.lang.Integer">
    delete from student_point_detail
    where student_id = #{stuId,jdbcType=INTEGER}
  </delete>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_point_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.examsys.model.StudentPointDetail" >
    update student_point_detail
    set paper_code = #{paperCode,jdbcType=VARCHAR},
      question_id = #{questionId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      def_point = #{defPoint,jdbcType=DOUBLE},
      student_answer = #{studentAnswer,jdbcType=VARCHAR},
      student_point = #{studentPoint,jdbcType=DOUBLE},
      question_status = #{questionStatus,jdbcType=INTEGER},
      exam_id = #{examId}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, paper_code, question_id, student_id, def_point, student_answer, student_point,
    question_status,exam_id
    from student_point_detail
    where id = #{id,jdbcType=INTEGER}
  </select>





</mapper>